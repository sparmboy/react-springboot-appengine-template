[{"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\index.tsx":"1","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\reportWebVitals.ts":"2","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\App.tsx":"3","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\themes\\theme1.js":"4","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\utils\\auth\\auth.ts":"5","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\HomeScreen.tsx":"6","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\components\\routes\\ProtectedRoute.tsx":"7","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\MyOrdersScreen.tsx":"8","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\security\\OAuth2RedirectHandler.tsx":"9","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\LoginScreen.tsx":"10","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\services\\apiConfig.ts":"11"},{"size":978,"mtime":1651607473898,"results":"12","hashOfConfig":"13"},{"size":440,"mtime":1651607473899,"results":"14","hashOfConfig":"13"},{"size":1789,"mtime":1656530967061,"results":"15","hashOfConfig":"13"},{"size":2888,"mtime":1651607473902,"results":"16","hashOfConfig":"13"},{"size":2099,"mtime":1656530765616,"results":"17","hashOfConfig":"13"},{"size":3136,"mtime":1651607473900,"results":"18","hashOfConfig":"13"},{"size":617,"mtime":1651607473898,"results":"19","hashOfConfig":"13"},{"size":89,"mtime":1651607473900,"results":"20","hashOfConfig":"13"},{"size":1116,"mtime":1651607473901,"results":"21","hashOfConfig":"13"},{"size":3246,"mtime":1656531203382,"results":"22","hashOfConfig":"13"},{"size":1326,"mtime":1651607473901,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1563ghi",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\index.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\reportWebVitals.ts",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\App.tsx",["48"],"import React, {useEffect, useState,useReducer} from 'react';\r\nimport {Router} from \"@reach/router\";\r\nimport {ProtectedRoute} from \"./components/routes/ProtectedRoute\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport {OAuth2RedirectHandler} from \"./security/OAuth2RedirectHandler\";\r\nimport {MyOrdersScreen} from \"./screens/MyOrdersScreen\";\r\nimport {AuthDispatchContext, authReducer, AuthStateContext, getCurrentUser, initialAuthState} from \"./utils/auth/auth\";\r\n\r\nexport type AppProps = {\r\n  hideLoader: () => void,\r\n  showLoader: () => void\r\n}\r\n\r\nfunction App(props: AppProps) {\r\n    const [authState, authDispatch] = useReducer(authReducer, initialAuthState);\r\n\r\n\r\n  const authenticate = () => {\r\n    console.log('Attempting authentication...');\r\n    getCurrentUser()\r\n        .then((user) => {\r\n          console.log('User is authenticated with current session');\r\n          props.hideLoader();\r\n            authDispatch({\r\n                type: 'success', authState: {...user, authenticated: true}\r\n            });\r\n        })\r\n        .catch(() => {\r\n          console.log('User not authenticated');\r\n          props.hideLoader();\r\n        })\r\n    ;\r\n  }\r\n\r\n  useEffect(authenticate, [props]);\r\n\r\n  return <AuthStateContext.Provider value={authState}>\r\n      <AuthDispatchContext.Provider value={authDispatch}>\r\n    <Router>\r\n      <HomeScreen path=\"/\" authenticated={authState.authenticated}/>\r\n      <LoginScreen path=\"/login\" authenticated={authState.authenticated}/>\r\n      <OAuth2RedirectHandler path=\"/oauth2\"/>\r\n      <ProtectedRoute path=\"orders\" isLoggedIn={authState.authenticated} as={MyOrdersScreen}/>\r\n    </Router>\r\n      </AuthDispatchContext.Provider>\r\n  </AuthStateContext.Provider>\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\themes\\theme1.js",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\utils\\auth\\auth.ts",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\HomeScreen.tsx",["49"],"import {RouteComponentProps, useNavigate, RouterProps} from \"@reach/router\";\r\nimport {Button, createStyles, Grid, makeStyles, Theme} from \"@material-ui/core\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {BiPlug, MdList, MdSearch,  MdVerifiedUser} from \"react-icons/all\";\r\nimport {host} from \"../services/apiConfig\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Stomp} from \"@stomp/stompjs\";\r\nimport SockJS from \"sockjs-client\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            width: '100%',\r\n            height: 300,\r\n            fontSize: 30,\r\n            backgroundColor: theme.palette.common.white\r\n        },\r\n\r\n    }),\r\n);\r\n\r\ninterface HomeScreenProps extends RouteComponentProps<RouterProps> {\r\n    authenticated: boolean\r\n}\r\n\r\nconst HomeScreen: React.FC<HomeScreenProps & RouteComponentProps> = ({authenticated}) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    const socket = new SockJS(host + '/session');\r\n    const stompClient = Stomp.over(socket);\r\n    const [message,setMessage] = useState<string>();\r\n\r\n    const onSocketMessage =  (msg: any) => {\r\n        console.log('received message', msg.body);\r\n        setMessage(msg.body);\r\n    }\r\n\r\n    const onStompDisconnect = () => {\r\n        stompClient.disconnect();\r\n    }\r\n\r\n    const onSocketButton = () => {\r\n        stompClient.connect({}, (frame: any) => {\r\n            const stateTopic = '/topic/session';\r\n            console.log('Connected, subscribing to ', stateTopic)\r\n            stompClient.subscribe(stateTopic,onSocketMessage);\r\n        }, onStompDisconnect);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        return onStompDisconnect;\r\n    },[])\r\n\r\n    return <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"stretch\"\r\n        spacing={2}\r\n    >\r\n        <Grid item>\r\n            <Button className={classes.button}\r\n                    color={\"primary\"}\r\n                    variant={\"outlined\"}\r\n                    startIcon={<MdSearch size={40}/>}\r\n                    onClick={() => navigate('/orders/new')}>Place Order</Button>\r\n        </Grid>\r\n        {authenticated &&\r\n        <Grid item>\r\n            <Button className={classes.button}\r\n                    color={\"secondary\"}\r\n                    variant={\"outlined\"}\r\n                    startIcon={<MdList size={40}/>}\r\n                    onClick={() => navigate('/orders')}>My Orders</Button>\r\n        </Grid>}\r\n        {!authenticated &&\r\n        <Grid item><Button className={classes.button} color={\"secondary\"} variant={\"outlined\"}\r\n                           startIcon={<MdVerifiedUser size={40}/>}\r\n                           onClick={() => navigate('/login')}>Login</Button></Grid>}\r\n\r\n        <Grid item><Button variant={\"contained\"} startIcon={<BiPlug size={40}/>}\r\n                           onClick={() => onSocketButton()}>Click here to open a web socket stream</Button></Grid>\r\n\r\n        <Grid item>\r\n            {message && <Alert severity=\"info\">{message}</Alert>}\r\n        </Grid>\r\n\r\n    </Grid>\r\n}\r\n\r\nexport default HomeScreen;","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\components\\routes\\ProtectedRoute.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\MyOrdersScreen.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\security\\OAuth2RedirectHandler.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\LoginScreen.tsx",["50","51"],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\services\\apiConfig.ts",[],{"ruleId":"52","severity":1,"message":"53","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":35},{"ruleId":"56","severity":1,"message":"57","line":52,"column":7,"nodeType":"58","endLine":52,"endColumn":9,"suggestions":"59"},{"ruleId":"52","severity":1,"message":"60","line":37,"column":26,"nodeType":"54","messageId":"55","endLine":37,"endColumn":41},{"ruleId":"52","severity":1,"message":"61","line":47,"column":11,"nodeType":"54","messageId":"55","endLine":47,"endColumn":19},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onStompDisconnect'. Either include it or remove the dependency array.","ArrayExpression",["62"],"'setLoginRequest' is assigned a value but never used.","'onSignIn' is assigned a value but never used.",{"desc":"63","fix":"64"},"Update the dependencies array to be: [onStompDisconnect]",{"range":"65","text":"66"},[1712,1714],"[onStompDisconnect]"]