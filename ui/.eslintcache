[{"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\index.tsx":"1","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\reportWebVitals.ts":"2","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\App.tsx":"3","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\themes\\theme1.js":"4","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\utils\\auth\\auth.ts":"5","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\HomeScreen.tsx":"6","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\components\\routes\\ProtectedRoute.tsx":"7","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\security\\OAuth2RedirectHandler.tsx":"8","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\LoginScreen.tsx":"9","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\services\\apiConfig.ts":"10","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\constants\\routes.ts":"11","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\SignInScreen.tsx":"12","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\SuccessScreen.tsx":"13","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\SignUpScreen.tsx":"14","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\constants\\session.ts":"15","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\constants\\roles.ts":"16","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\AdminScreen.tsx":"17","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\components\\navigation\\NavigateTo.tsx":"18","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\UnauthorisedScreen.tsx":"19","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\components\\navigation\\BackButton.tsx":"20","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\constants\\websockets.ts":"21","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\env\\environment.ts":"22"},{"size":1211,"mtime":1674210508554,"results":"23","hashOfConfig":"24"},{"size":440,"mtime":1651607473899,"results":"25","hashOfConfig":"24"},{"size":3454,"mtime":1674209414739,"results":"26","hashOfConfig":"24"},{"size":2873,"mtime":1658354088637,"results":"27","hashOfConfig":"24"},{"size":3445,"mtime":1674209065499,"results":"28","hashOfConfig":"24"},{"size":2338,"mtime":1674208967600,"results":"29","hashOfConfig":"24"},{"size":1196,"mtime":1674209425587,"results":"30","hashOfConfig":"24"},{"size":1217,"mtime":1674204351096,"results":"31","hashOfConfig":"24"},{"size":3913,"mtime":1658353529466,"results":"32","hashOfConfig":"24"},{"size":1045,"mtime":1676551837821,"results":"33","hashOfConfig":"24"},{"size":452,"mtime":1674209346313,"results":"34","hashOfConfig":"24"},{"size":5457,"mtime":1674204916905,"results":"35","hashOfConfig":"24"},{"size":1254,"mtime":1657294002177,"results":"36","hashOfConfig":"24"},{"size":5863,"mtime":1658353529473,"results":"37","hashOfConfig":"24"},{"size":134,"mtime":1674203713910,"results":"38","hashOfConfig":"24"},{"size":142,"mtime":1673521996599,"results":"39","hashOfConfig":"24"},{"size":1571,"mtime":1674211863536,"results":"40","hashOfConfig":"24"},{"size":287,"mtime":1673535512080,"results":"41","hashOfConfig":"24"},{"size":1350,"mtime":1674209459730,"results":"42","hashOfConfig":"24"},{"size":462,"mtime":1672684655358,"results":"43","hashOfConfig":"24"},{"size":201,"mtime":1674210220235,"results":"44","hashOfConfig":"24"},{"size":280,"mtime":1676550869200,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ydubum",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\index.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\reportWebVitals.ts",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\App.tsx",["94"],"import React, {useEffect, useReducer} from 'react';\r\nimport {navigate, Router} from \"@reach/router\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport {OAuth2RedirectHandler} from \"./security/OAuth2RedirectHandler\";\r\nimport {\r\n    AuthDispatchContext,\r\n    authReducer,\r\n    AuthStateContext,\r\n    getCurrentUser,\r\n    getSavedUrlAndClear,\r\n    initialAuthState, saveCurrentUrl\r\n} from \"./utils/auth/auth\";\r\nimport SignUpScreen from \"./screens/SignUpScreen\";\r\nimport SignInScreen from \"./screens/SignInScreen\";\r\nimport {\r\n    isCurrentUrlLoginRoute, ROUTE_ADMIN,\r\n    ROUTE_HOME,\r\n    ROUTE_LOGIN,\r\n    ROUTE_SIGNIN,\r\n    ROUTE_SIGNUP,\r\n    ROUTE_SUCCESS, ROUTE_UNAUTHORISED\r\n} from \"./constants/routes\";\r\nimport SuccessScreen from \"./screens/SuccessScreen\";\r\nimport {ProtectedRoute} from \"./components/routes/ProtectedRoute\";\r\nimport AdminScreen from \"./screens/AdminScreen\";\r\nimport {ROLE_ADMIN} from \"./constants/roles\";\r\nimport UnauthorisedScreen from \"./screens/UnauthorisedScreen\";\r\n\r\nexport type AppProps = {\r\n    hideLoader: () => void,\r\n    showLoader: () => void\r\n}\r\n\r\nfunction App(props: AppProps) {\r\n    const [authState, authDispatch] = useReducer(authReducer, initialAuthState);\r\n\r\n    const authenticate = () => {\r\n        console.log('Attempting authentication...');\r\n        if (!isCurrentUrlLoginRoute()) {\r\n            saveCurrentUrl();\r\n        }\r\n        authDispatch({\r\n            type: 'authenticating'\r\n        });\r\n\r\n        getCurrentUser()\r\n            .then((user) => {\r\n                console.log('User is authenticated with current session');\r\n                props.hideLoader();\r\n                authDispatch({\r\n                    type: 'success',\r\n                    authState: {...authState, user: user}\r\n                });\r\n\r\n                const url = getSavedUrlAndClear();\r\n                if (url) {\r\n                    navigate(url);\r\n                } else {\r\n                    navigate(ROUTE_HOME);\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log('User not authenticated');\r\n\r\n                authDispatch({\r\n                    type: 'failure',\r\n                    error: JSON.stringify(err)\r\n                });\r\n\r\n                props.hideLoader();\r\n\r\n                async function navigateToLogin() {\r\n                    await navigate(ROUTE_LOGIN);\r\n                }\r\n\r\n                if (!isCurrentUrlLoginRoute()) {\r\n                    saveCurrentUrl();\r\n                    navigateToLogin();\r\n                }\r\n            })\r\n        ;\r\n    }\r\n    useEffect(authenticate, [props]);\r\n\r\n    return <AuthStateContext.Provider value={authState}>\r\n        <AuthDispatchContext.Provider value={authDispatch}>\r\n            <Router>\r\n                <HomeScreen path={ROUTE_HOME}/>\r\n                <LoginScreen path={ROUTE_LOGIN} />\r\n                <SignUpScreen path={ROUTE_SIGNUP}/>\r\n                <SignInScreen path={ROUTE_SIGNIN}/>\r\n                <SuccessScreen path={ROUTE_SUCCESS}/>\r\n                <OAuth2RedirectHandler path=\"/oauth2\"/>\r\n\r\n                {/*Admin Role*/}\r\n                <ProtectedRoute path={ROUTE_ADMIN} permittedRoles={[ROLE_ADMIN]} as={AdminScreen} />\r\n\r\n                <UnauthorisedScreen path={`${ROUTE_UNAUTHORISED}`}/>\r\n\r\n            </Router>\r\n        </AuthDispatchContext.Provider>\r\n    </AuthStateContext.Provider>\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\themes\\theme1.js",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\utils\\auth\\auth.ts",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\HomeScreen.tsx",["95"],"import {RouteComponentProps, RouterProps, useNavigate} from \"@reach/router\";\nimport {\n    Button,\n    Grid,\n} from \"@mui/material\";\nimport './HomeScreen.css';\nimport {useContext, useEffect} from \"react\";\nimport {ROUTE_ADMIN, ROUTE_LOGIN} from \"../constants/routes\";\nimport {AuthState, AuthStateContext, doesUserHaveAnyOneOfTheseRoles, signOut} from \"../utils/auth/auth\";\nimport {ROLE_ADMIN} from \"../constants/roles\";\nimport {GoSignOut, GrUserAdmin} from \"react-icons/all\";\n\n\n\ninterface HomeScreenProps extends RouteComponentProps<RouterProps> {\n}\n\nconst HomeScreen: React.FC<HomeScreenProps & RouteComponentProps> = () => {\n\n    const authState = useContext<AuthState>(AuthStateContext);\n\n    const navigate = useNavigate();\n    useEffect(()=> {\n        async function navigateToLogin() {\n            await navigate(ROUTE_LOGIN);\n        }\n\n        if( !authState.authenticating ) {\n            if (!authState.user ) {\n                navigateToLogin();\n            }\n        }\n\n    },[authState])\n\n    const onAdmin = () => navigate(`${ROUTE_ADMIN}`);\n\n\n    return <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={2}\n    >\n        <Grid item sx={{marginTop: 16}}>\n            <img alt=\"logo\" src={\"/logo192.png\"}/>\n        </Grid>\n\n        <div className=\"circle-right\"/>\n\n        {authState.user && doesUserHaveAnyOneOfTheseRoles(authState.user,[ROLE_ADMIN]) &&\n        <Grid item container justifyContent=\"center\" alignItems={\"stretch\"} >\n            <Button variant={\"contained\"}\n                    onClick={onAdmin}\n                    startIcon={<GrUserAdmin/>}\n                    sx={{\n                        width: '100%',\n                        marginRight: '32px',\n                        borderRadius: 2\n                    }}\n            >Admin Page</Button>\n        </Grid>}\n\n        <Grid item container justifyContent=\"center\" alignItems={\"stretch\"} >\n            <Button variant={\"contained\"}\n                    onClick={signOut}\n                    startIcon={<GoSignOut/>}\n                    sx={{\n                        width: '100%',\n                        marginRight: '32px',\n                        borderRadius: 2\n                    }}\n            >Sign Out</Button>\n        </Grid>\n\n    </Grid>\n}\n\nexport default HomeScreen;","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\components\\routes\\ProtectedRoute.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\security\\OAuth2RedirectHandler.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\LoginScreen.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\services\\apiConfig.ts",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\constants\\routes.ts",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\SignInScreen.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\SuccessScreen.tsx",["96"],"import {\n    Grid, Typography\n} from \"@mui/material\";\nimport {RouteComponentProps} from \"@reach/router\";\nimport  \"./HomeScreen.css\";\nimport {RiCheckboxCircleFill} from \"react-icons/all\";\n\n\nconst SuccessScreen: React.FC<RouteComponentProps> = () => {\n\n    return <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={2}\n    >\n        <div className=\"circle-right\"/>\n\n        <Grid item sx={{marginTop: 16}}>\n            <img alt=\"logo\" src={\"/logo192.png\"}/>\n        </Grid>\n\n        <Grid item  sx={{borderRadius:150}}>\n            <RiCheckboxCircleFill size={144} color={\"#727f8f\"} />\n        </Grid>\n\n\n        <Grid item >\n            <Typography variant={\"h3\"} color={\"white\"}>Success!</Typography>\n        </Grid>\n\n        <Grid item  justifyContent={\"center\"} alignItems={\"center\"}>\n            <Typography sx={{px:8,py:2,textAlign:'center'}} variant={\"body2\"}  color={\"white\"}>Now check your email for confirmation link.</Typography>\n        </Grid>\n\n\n        <Grid item sx={{marginTop:20}}>\n            <Typography variant={\"body1\"}  color={\"white\"}>Didnt receive it? <a href={\"#\"}>Click here</a></Typography>\n        </Grid>\n\n\n    </Grid>\n\n}\n\nexport default SuccessScreen;","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\SignUpScreen.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\constants\\session.ts",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\constants\\roles.ts",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\AdminScreen.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\components\\navigation\\NavigateTo.tsx",["97"],"import {useEffect} from \"react\";\r\nimport {navigate} from \"@reach/router\";\r\nimport {AuthState} from \"../../utils/auth/auth\";\r\n\r\nexport const NavigateTo = (props: { to:string,authState: AuthState }) => {\r\n    useEffect(() => {\r\n        navigate(props.to);\r\n    },[])\r\n    return <></>\r\n}\r\n","C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\screens\\UnauthorisedScreen.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\components\\navigation\\BackButton.tsx",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\constants\\websockets.ts",[],"C:\\Users\\spenc\\IdeaProjects\\react-springboot-appengine-template\\ui\\src\\env\\environment.ts",[],{"ruleId":"98","severity":1,"message":"99","line":85,"column":29,"nodeType":"100","endLine":85,"endColumn":36,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":34,"column":7,"nodeType":"100","endLine":34,"endColumn":18,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":39,"column":78,"nodeType":"106","endLine":39,"endColumn":92},{"ruleId":"98","severity":1,"message":"107","line":8,"column":7,"nodeType":"100","endLine":8,"endColumn":9,"suggestions":"108"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["110"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.to'. Either include it or remove the dependency array.",["111"],{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [authState, props]",{"range":"118","text":"119"},"Update the dependencies array to be: [authState, navigate]",{"range":"120","text":"121"},"Update the dependencies array to be: [props.to]",{"range":"122","text":"123"},[2645,2652],"[authState, props]",[986,997],"[authState, navigate]",[261,263],"[props.to]"]